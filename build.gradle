plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
}

group = 'com.nationsrpg.plugin'
version = '0.1.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'papermc-repo'
        url = uri('https://papermc.io/repo/repository/maven-public/')
    }
    maven {
        name = 'sonatype'
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }
    maven {
        name = 'jitpack'
        url = uri('https://jitpack.io')
    }
    maven {
        name = 'aikar'
        url = uri('https://repo.aikar.co/content/groups/aikar/')
    }
    maven {
        name = 'codemc'
        url = uri('https://repo.codemc.org/repository/maven-public/')
    }
    maven {
        name = 'redempt'
        url = uri('https://redempt.dev')
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:23.0.0'

    compileOnly 'me.lucko:helper:5.6.10'
    implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
    implementation 'com.github.byteful.datastore:api:1.1.1'
    implementation('com.github.byteful.datastore:mysql:1.1.1') {
        exclude group: 'mysql', module: 'mysql-connector-java'
    }
    implementation('com.github.byteful.datastore:sqlite:1.1.1') {
        exclude group: 'org.xerial', module: 'sqlite-jdbc'
    }
    implementation 'com.github.byteful:MiniMapGUI:v0.1.0'
    compileOnly 'com.github.Redempt:RedLib:6.5.2'
    compileOnly 'net.luckperms:api:5.4'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('*.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set("NationsRPG-Core")
    archiveClassifier.set("")

    relocate 'co.aikar.commands', 'com.nationsrpg.libs.aikar.commands'
    relocate 'co.aikar.locales', 'com.nationsrpg.libs.aikar.locales'
    relocate 'me.byteful', 'com.nationsrpg.libs.byteful'

//    dependencies {
//        exclude(dependency('org.xerial:sqlite-jdbc:3.36.0.3'))
//        exclude(dependency('mysql:mysql-connector-java:8.0.26'))
//    }

    exclude 'com/mysql/'
    exclude 'org/sqlite/'
    exclude 'org/slf4j/'
    exclude 'com/google/'
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}
